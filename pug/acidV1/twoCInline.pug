script(type='text/javascript').
    //Test 2c, Script inline, DOM Manipution
    document.addEventListener('DOMContentLoaded', function () {
        var inlineScriptImage = new Image();
        inlineScriptImage.src = "pixel.png";
        var scriptParent = document.getElementById('scriptParent');
        scriptParent.appendChild(inlineScriptImage);
    });

    //Test 2d, AJAX image replacement of content that should be in the archive
    document.addEventListener('DOMContentLoaded', function () {
        //Test 2d setup
        var test2DImageRed = new Image();
        test2DImageRed.src = "red.png";
        test2DImageRed.id = "test2d";
        var scriptParent = document.getElementById('scriptParent');
        scriptParent.appendChild(test2DImageRed);

        //Test 2d init AJAX
        var xhr = new XMLHttpRequest();
        xhr.open('GET','http://acid.matkelly.com/pixel.png',true);
        xhr.responseType = 'arraybuffer';
        xhr.onload = function(e) {
            document.getElementById('test2d').src = "data:image/png;base64,"+base64ArrayBuffer(e.currentTarget.response);
        };
        xhr.send();
    });

    //Test 2e, AJAX requests with content that should be included in the archive, test for false positive
    // e.g. Same Origin Policy
    document.addEventListener('DOMContentLoaded', function () {
        //Test 2e setup
        var test2EImageBlue = new Image();
        test2EImageBlue.src = "pixel.png";
        test2EImageBlue.id = "test2e";
        var scriptParent = document.getElementById('scriptParent');
        scriptParent.appendChild(test2EImageBlue);

        //Test 10 init AJAX
        var xhr = new XMLHttpRequest();
        xhr.open('GET','http://acid.matkelly.com/pixel.png',true);
        try{
            xhr.responseType = 'arraybuffer';	//response type of synchronous request should not be changeable, INVALID_ACCESS_ERR: DOM Exception 15
            xhr.onload = function(e) {
                document.getElementById('test2e').src = "data:image/png;base64,"+base64ArrayBuffer(e.currentTarget.response);
            };
            xhr.send();
        } catch(err){
            //console.log(err); //correct path
        }
    });

    // TODO Test 2f: some code only served to certain user agents
    // Test 2g: code that manipulates DOM after a certain delay (test the synchonicity of tools)
    document.addEventListener('DOMContentLoaded', function () {
        //Test 12 setup
        var test2GImageRed = new Image();
        test2GImageRed.src = "red.png";
        test2GImageRed.id = "test2g";
        var scriptParent = document.getElementById('scriptParent');
        scriptParent.appendChild(test2GImageRed);

        //change image after 2 seconds
        setTimeout(function () {
            document.getElementById('test2g').src = "pixel.png";
        }, 2000);
    });
    // Test 2h: code that manipulates DOM after a certain delay (test the synchonicity of tools)
    document.addEventListener('DOMContentLoaded',function(){
        //Test 2h setup
        //var test13ImageBlue = new Image();
        var test2HIframeBlue = document.createElement('iframe');
        test2HIframeBlue.src = "pixel.png";
        test2HIframeBlue.id = "test2h";
        var scriptParent = document.getElementById('scriptParent');
        //scriptParent.appendChild(test13ImageBlue);
        //scriptParent.appendChild(test13IframeBlue);

        setTimeout(function(){
            //document.write('<scr'+'ipt type="text/javascript" src="dynamicallyIncludedScript.js"></sc'+'ript>');
        },  2100);
    });
    // Test 2i: code that loads content only after user interaction (tests for interaction-reliant loading of resource)
    var test2iExecuted = false;
    document.addEventListener('DOMContentLoaded',function(){
        var test2IImageRed = new Image();
        test2IImageRed.src = "red.png";
        test2IImageRed.id = "test2i";
        test2IImageRed.title = "2i";
        var scriptParent = document.getElementById('scriptParent');
        scriptParent.appendChild(test2IImageRed);
        window.onscroll = function(oEvent){
            if(test2iExecuted){return;}
            test2iExecuted = true;
            document.getElementById('test2i').src = "pixel_2i.png";
      } ;
    });
